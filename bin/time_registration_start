#!/bin/env php
<?php
/**
 * @author net_bazzline_create_executable_command_line_file
 * @since 2015-11-26
 */

//begin of including composer autoload.php
$possiblePathsToComposerAutoloadFile = array(
    __DIR__ . '/../../../autoload.php',
    __DIR__ . '/../../vendor/autoload.php',
    __DIR__ . '/../vendor/autoload.php'
);
$pathToAutoloadFileNotFound = true;
$pathToAutoloadFile         = null;
foreach ($possiblePathsToComposerAutoloadFile as $path) {
    if (file_exists($path)) {
        $pathToAutoloadFile         = $path;
        $pathToAutoloadFileNotFound = false;
        break;
    }
}
if ($pathToAutoloadFileNotFound) {
    echo 'could not find composer autoload.php, no composer installed?' . PHP_EOL;
    exit(1);
}

require_once $pathToAutoloadFile;
//end of including composer autoload.php

use Net\Bazzline\Component\Cli\Environment\CommandLineEnvironment;
use Net\Bazzline\TimeRegistration\LocalBuilder\Utility\ApplicationLocator;

$environment    = new CommandLineEnvironment($argv);
$usage          = basename(__FILE__) . ' <subject> <description> [-f|--force] [-n|--now] [-v|--verbose]';

$environment->execute(
    function (CommandLineEnvironment $environment) {
        //begin of dependencies
        $arguments  = $environment->getArguments();
        $isForced   = ($arguments->hasFlag('f') || $arguments->hasFlag('force'));
        $locator    = new ApplicationLocator();
        $time       = $locator->getTime();
        $useNow     = ($arguments->hasFlag('n') || $arguments->hasFlag('now'));
        $values     = $arguments->getValues();
        //end of dependencies

        $valuesNotAreValid = (!count($values) >= 2);

        //begin of argument validation
        if ($valuesNotAreValid) {
            throw new InvalidArgumentException(
                'invalid number of arguments provided'
            );
        }

        $subject        = array_shift($values);
        $description    = implode(' ' , $values);
        //end of argument validation

        //begin of business logic
        //@todo check if day has not finished yet
        $timestamp              = $time->getTimestamp();

        if ($useNow) {
            $timestamp = $time->roundDown($timestamp);
        }

        $collection             = $locator->getCollectionOfEntries();
        $currentCalendarWeek    = $time->createCalendarWeek($timestamp);

        $collection->setName($currentCalendarWeek);
        $collection->setYear($time->createYear($timestamp));
        $collection->addEntry($description, $subject, $timestamp, $isForced);
        $collection->persist();

        $environment->outputIfVerbosityIsEnabled('added content to file:');
        $environment->outputIfVerbosityIsEnabled('to file:');
        $environment->outputIfVerbosityIsEnabled(basename($collection->getFilePath()));
        //end of business logic
    },
    $usage
);
